// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/Erog38/ent-annotations-failing/ent/schema"
	"github.com/Erog38/ent-annotations-failing/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUpdateTime is the schema descriptor for update_time field.
	userDescUpdateTime := userFields[1].Descriptor()
	// user.DefaultUpdateTime holds the default value on creation for the update_time field.
	user.DefaultUpdateTime = userDescUpdateTime.Default.(func() time.Time)
	// user.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	user.UpdateDefaultUpdateTime = userDescUpdateTime.UpdateDefault.(func() time.Time)
	// userDescCreatedTime is the schema descriptor for created_time field.
	userDescCreatedTime := userFields[2].Descriptor()
	// user.DefaultCreatedTime holds the default value on creation for the created_time field.
	user.DefaultCreatedTime = userDescCreatedTime.Default.(func() time.Time)
	// userDescUpdatedBy is the schema descriptor for updated_by field.
	userDescUpdatedBy := userFields[3].Descriptor()
	// user.DefaultUpdatedBy holds the default value on creation for the updated_by field.
	user.DefaultUpdatedBy = userDescUpdatedBy.Default.(string)
	// userDescCreatedBy is the schema descriptor for created_by field.
	userDescCreatedBy := userFields[4].Descriptor()
	// user.CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	user.CreatedByValidator = userDescCreatedBy.Validators[0].(func(string) error)
}
